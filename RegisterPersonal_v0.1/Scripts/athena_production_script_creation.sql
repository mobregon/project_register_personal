-- MySQL Script generated by MySQL Workbench
-- 05/24/15 03:14:53
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema athena_production
-- -----------------------------------------------------
-- Database schema used for personal registration.
DROP SCHEMA IF EXISTS `athena_production` ;

-- -----------------------------------------------------
-- Schema athena_production
--
-- Database schema used for personal registration.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `athena_production` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `athena_production` ;

-- -----------------------------------------------------
-- Table `athena_production`.`company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`company` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`company` (
  `company_id` INT(10) NOT NULL COMMENT 'Company id',
  `company_name` VARCHAR(45) NOT NULL COMMENT 'Company text',
  PRIMARY KEY (`company_id`),
  UNIQUE INDEX `company_name_UNIQUE` (`company_name` ASC))
ENGINE = InnoDB
COMMENT = 'This table containes the possible companies that an employee can belong to.';


-- -----------------------------------------------------
-- Table `athena_production`.`gender`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`gender` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`gender` (
  `gender_id` INT(1) NOT NULL COMMENT 'Gender id',
  `gender_text` VARCHAR(45) NOT NULL COMMENT 'Gendet text',
  PRIMARY KEY (`gender_id`),
  UNIQUE INDEX `gender_text_UNIQUE` (`gender_text` ASC))
ENGINE = InnoDB
COMMENT = 'This table containes the possible genders of an employee.';


-- -----------------------------------------------------
-- Table `athena_production`.`activity`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`activity` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`activity` (
  `activity_id` INT(10) NOT NULL COMMENT 'Activity id',
  `activity_text` VARCHAR(45) NOT NULL COMMENT 'Activity text',
  PRIMARY KEY (`activity_id`),
  UNIQUE INDEX `activity_text_UNIQUE` (`activity_text` ASC))
ENGINE = InnoDB
COMMENT = 'This table containes the possible activities of an employee.';


-- -----------------------------------------------------
-- Table `athena_production`.`status`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`status` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`status` (
  `status_id` INT(10) NOT NULL COMMENT 'Status id',
  `status_text` VARCHAR(45) NOT NULL COMMENT 'Status text',
  PRIMARY KEY (`status_id`),
  UNIQUE INDEX `status_text_UNIQUE` (`status_text` ASC))
ENGINE = InnoDB
COMMENT = 'This table containes the possible status of an employee.';


-- -----------------------------------------------------
-- Table `athena_production`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`employees` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`employees` (
  `employee_number` INT(20) NOT NULL COMMENT 'Register number of a employee.',
  `employee_last_name` VARCHAR(50) NOT NULL COMMENT 'Last name of the employee.',
  `employee_first_name` VARCHAR(50) NOT NULL COMMENT 'First name of the employee.',
  `employee_gender` INT(1) NOT NULL COMMENT 'Gender of the employee.',
  `employee_company` INT(10) NOT NULL COMMENT 'Company where the employee belongs to.',
  `employee_activity` INT(10) NOT NULL COMMENT 'Activity of the employee',
  `employee_status` INT(10) NOT NULL COMMENT 'Current status of the employee',
  `employee_create_time` DATETIME NOT NULL COMMENT 'Creation time when the employee was registered',
  PRIMARY KEY (`employee_number`),
  INDEX `FK_employee_company_idx` (`employee_company` ASC),
  INDEX `FK_employee_gender_idx` (`employee_gender` ASC),
  INDEX `FK_employee_activity_idx` (`employee_activity` ASC),
  INDEX `FK_employee_status_idx` (`employee_status` ASC),
  CONSTRAINT `FK_employee_company`
    FOREIGN KEY (`employee_company`)
    REFERENCES `athena_production`.`company` (`company_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_employee_gender`
    FOREIGN KEY (`employee_gender`)
    REFERENCES `athena_production`.`gender` (`gender_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_employee_activity`
    FOREIGN KEY (`employee_activity`)
    REFERENCES `athena_production`.`activity` (`activity_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_employee_status`
    FOREIGN KEY (`employee_status`)
    REFERENCES `athena_production`.`status` (`status_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
COMMENT = 'This table represents the employees registered in the company.';


-- -----------------------------------------------------
-- Table `athena_production`.`register_type`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`register_type` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`register_type` (
  `register_type_id` INT(1) NOT NULL COMMENT 'Register type Id',
  `register_type_text` VARCHAR(45) NOT NULL COMMENT 'Regter Type Text',
  PRIMARY KEY (`register_type_id`),
  UNIQUE INDEX `register_type_text_UNIQUE` (`register_type_text` ASC))
ENGINE = InnoDB
COMMENT = 'This table contains the register type of attendance';


-- -----------------------------------------------------
-- Table `athena_production`.`attendance_register`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `athena_production`.`attendance_register` ;

CREATE TABLE IF NOT EXISTS `athena_production`.`attendance_register` (
  `attendance_id` INT NOT NULL COMMENT 'Register Id',
  `attendance_employee` INT(20) NOT NULL COMMENT 'Employee that registered the attendance',
  `attendance_type` INT(1) NOT NULL COMMENT 'Register type',
  `attendance_time` DATETIME NOT NULL COMMENT 'Datetime of the attendance registered by one employee',
  PRIMARY KEY (`attendance_id`),
  INDEX `FK_attendance_register_type_idx` (`attendance_type` ASC),
  INDEX `FK_attendance_employee_idx` (`attendance_employee` ASC),
  CONSTRAINT `FK_attendance_register_type`
    FOREIGN KEY (`attendance_type`)
    REFERENCES `athena_production`.`register_type` (`register_type_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_attendance_employee`
    FOREIGN KEY (`attendance_employee`)
    REFERENCES `athena_production`.`employees` (`employee_number`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'This table contains the attendance registered by employees';


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `athena_production`.`company`
-- -----------------------------------------------------
START TRANSACTION;
USE `athena_production`;
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (1, 'JBP');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (2, 'SES');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (3, 'AJ');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (4, 'GSD');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (5, 'FAL');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (6, 'SERSIC');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (7, 'GU');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (8, 'S24');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (9, 'ARG');
INSERT INTO `athena_production`.`company` (`company_id`, `company_name`) VALUES (10, 'SMD');

COMMIT;


-- -----------------------------------------------------
-- Data for table `athena_production`.`gender`
-- -----------------------------------------------------
START TRANSACTION;
USE `athena_production`;
INSERT INTO `athena_production`.`gender` (`gender_id`, `gender_text`) VALUES (1, 'MALE');
INSERT INTO `athena_production`.`gender` (`gender_id`, `gender_text`) VALUES (2, 'FEMALE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `athena_production`.`activity`
-- -----------------------------------------------------
START TRANSACTION;
USE `athena_production`;
INSERT INTO `athena_production`.`activity` (`activity_id`, `activity_text`) VALUES (1, 'SECURITY');
INSERT INTO `athena_production`.`activity` (`activity_id`, `activity_text`) VALUES (2, 'OTHER');

COMMIT;


-- -----------------------------------------------------
-- Data for table `athena_production`.`status`
-- -----------------------------------------------------
START TRANSACTION;
USE `athena_production`;
INSERT INTO `athena_production`.`status` (`status_id`, `status_text`) VALUES (1, 'ACTIVE');
INSERT INTO `athena_production`.`status` (`status_id`, `status_text`) VALUES (2, 'INACTIVE');

COMMIT;


-- -----------------------------------------------------
-- Data for table `athena_production`.`register_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `athena_production`;
INSERT INTO `athena_production`.`register_type` (`register_type_id`, `register_type_text`) VALUES (1, 'ENTRANCE');
INSERT INTO `athena_production`.`register_type` (`register_type_id`, `register_type_text`) VALUES (2, 'LEAVE');

COMMIT;